tui.util.defineNamespace("fedoc.content", {});
fedoc.content["utils.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview Utils for calendar component\n * @author NHN Net. FE dev team. &lt;dl_javascript@nhnent.com>\n * @dependency ne-code-snippet ~1.0.2\n */\n\n'use strict';\n\n/**\n * Utils of calendar\n * @namespace utils\n */\nvar utils = {\n    /**\n     * Return date hash by parameter.\n     *  if there are 3 parameter, the parameter is corgnized Date object\n     *  if there are no parameter, return today's hash date\n     * @function getDateHashTable\n     * @memberof utils\n     * @param {Date|number} [year] A date instance or year\n     * @param {number} [month] A month\n     * @param {number} [date] A date\n     * @returns {{year: *, month: *, date: *}} \n     */\n    getDateHashTable: function(year, month, date) {\n        var nDate;\n\n        if (arguments.length &lt; 3) {\n            nDate = arguments[0] || new Date();\n\n            year = nDate.getFullYear();\n            month = nDate.getMonth() + 1;\n            date = nDate.getDate();\n        }\n\n        return {\n            year: year,\n            month: month,\n            date: date\n        };\n    },\n\n    /**\n     * Return today that saved on component or create new date.\n     * @function getToday\n     * @returns {{year: *, month: *, date: *}}\n     * @memberof utils\n     */\n    getToday: function() {\n       return utils.getDateHashTable();\n    },\n\n    /**\n     * Get weeks count by paramenter\n     * @function getWeeks\n     * @param {number} year A year\n     * @param {number} month A month\n     * @return {number} ì£¼ (4~6)\n     * @memberof utils\n     **/\n    getWeeks: function(year, month) {\n        var firstDay = this.getFirstDay(year, month),\n            lastDate = this.getLastDate(year, month);\n\n        return Math.ceil((firstDay + lastDate) / 7);\n    },\n\n    /**\n     * Get unix time from date hash\n     * @function getTime\n     * @param {Object} date A date hash\n     * @param {number} date.year A year\n     * @param {number} date.month A month\n     * @param {number} date.date A date\n     * @return {number} \n     * @memberof utils\n     * @example\n     * utils.getTime({year:2010, month:5, date:12}); // 1273590000000\n     **/\n    getTime: function(date) {\n        return this.getDateObject(date).getTime();\n    },\n\n    /**\n     * Get which day is first by parameters that include year and month information.\n     * @function getFirstDay\n     * @param {number} year A year\n     * @param {number} month A month\n     * @return {number} (0~6)\n     * @memberof utils\n     **/\n    getFirstDay: function(year, month) {\n        return new Date(year, month - 1, 1).getDay();\n    },\n\n    /**\n     * Get which day is last by parameters that include year and month information.\n     * @function getLastDay\n     * @param {number} year A year\n     * @param {number} month A month\n     * @return {number} (0~6)\n     * @memberof utils\n     **/\n    getLastDay: function(year, month) {\n        return new Date(year, month, 0).getDay();\n    },\n\n    /**\n     * Get last date by parameters that include year and month information.\n     * @function\n     * @param {number} year A year\n     * @param {number} month A month\n     * @return {number} (1~31)\n     * @memberof utils\n     **/\n    getLastDate: function(year, month) {\n        return new Date(year, month, 0).getDate();\n    },\n\n    /**\n     * Get date instance.\n     * @function getDateObject\n     * @param {Object} date A date hash\n     * @return {Date} Date  \n     * @memberof utils\n     * @example\n     *  utils.getDateObject({year:2010, month:5, date:12});\n     *  utils.getDateObject(2010, 5, 12); //year,month,date\n     **/\n    getDateObject: function(date) {\n        if (arguments.length === 3) {\n            return new Date(arguments[0], arguments[1] - 1, arguments[2]);\n        }\n        return new Date(date.year, date.month - 1, date.date);\n    },\n\n    /**\n     * Get related date hash with parameters that include date information.\n     * @function getRelativeDate\n     * @param {number} year A related value for year(you can use +/-)\n     * @param {number} month A related value for month (you can use +/-)\n     * @param {number} date A related value for day (you can use +/-)\n     * @param {Object} dateObj standard date hash\n     * @return {Object} dateObj \n     * @memberof utils\n     * @example\n     *  utils.getRelativeDate(1, 0, 0, {year:2000, month:1, date:1}); // {year:2001, month:1, date:1}\n     *  utils.getRelativeDate(0, 0, -1, {year:2010, month:1, date:1}); // {year:2009, month:12, date:31}\n     **/\n    getRelativeDate: function(year, month, date, dateObj) {\n        var nYear = (dateObj.year + year),\n            nMonth = (dateObj.month + month - 1),\n            nDate = (dateObj.date + date),\n            nDateObj = new Date(nYear, nMonth, nDate);\n\n        return utils.getDateHashTable(nDateObj);\n    }\n};\n\nmodule.exports = utils;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"